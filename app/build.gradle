plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
}

android {
    namespace 'com.example.habitstracker'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.habitstracker"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    packagingOptions {
        exclude 'META-INF/*'
    }
}
dependencies {
    implementation project(':domain')
    implementation project(':Data')

//    implementation 'com.android.support:design-bottomsheet:28.0.0-alpha1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-dynamic-features-fragment:2.5.3'
//    implementation 'androidx.navigation:navigation-safe-args-gradle-plugin:2.5.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    // Room components
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    //Net components
    // Добавляем зависимость для Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Добавляем зависимость для конвертера JSON в объекты Kotlin
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // Добавляем зависимость для OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    //dependency injection
    //dagger2
//    api 'com.google.dagger:dagger:2.35.1'
    implementation 'com.google.dagger:dagger:2.43.2'
    kapt 'com.google.dagger:dagger-compiler:2.43.2'
//    api 'com.google.dagger:dagger-android:2.35.1'
//    api 'com.google.dagger:dagger-android-support:2.35.1'
//    annotationProcessor 'com.google.dagger:dagger-compiler:2.35.1'
//      kapt 'com.google.dagger:dagger-android-processor:2.35.1'

//  Test impl
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.13.5"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation "io.mockk:mockk-android:1.13.5"
    //    def lifecycle_version = "2.6.1"
//    def arch_version = "2.2.0"
///     optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$arch_version"
////     optional - Test helpers for Lifecycle runtime
//    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"

    androidTestImplementation 'org.hamcrest:hamcrest:2.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.navigation:navigation-testing:2.5.3"
//    androidTestImplementation "com.google.dagger:dagger-testing:2.35.1"
    kaptAndroidTest "com.google.dagger:dagger-compiler:2.43.2"
    debugImplementation "io.mockk:mockk-android:1.13.5"
    debugImplementation "androidx.fragment:fragment-testing:1.5.7"

//
//
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
//    // ViewModel utilities for Compose
////    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
//    // LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
//    // Lifecycles only (without ViewModel or LiveData)
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
//    // Lifecycle utilities for Compose
////    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
//
//    // Saved state module for ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
//
//    // Annotation processor
////    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - helpers for implementing LifecycleOwner in a Service
////    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
//
//    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
//    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
////    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
//

}

